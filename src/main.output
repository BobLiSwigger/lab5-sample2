Terminals unused in grammar

   LBCT
   RBCT
   T_STRING
   BOOL


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | RETURN expr SEMICOLON
    6          | RETURN SEMICOLON
    7          | declaration
    8          | expr SEMICOLON
    9          | PRINTF LP exprs RP SEMICOLON
   10          | SCANF LP exprs RP SEMICOLON
   11          | IF LP expr RP LB statements RB
   12          | WHILE LP expr RP LB statements RB
   13          | FOR LP statement expr SEMICOLON expr RP LB statements RB

   14 declaration: T decl_exprs SEMICOLON
   15            | T IDENTIFIER LP RP LB statements RB

   16 decl_exprs: decl_expr
   17           | decl_exprs COMMA decl_expr

   18 decl_expr: IDENTIFIER
   19          | IDENTIFIER LOP_ASSIGN expr

   20 exprs: expr
   21      | exprs COMMA expr

   22 expr: VALUE
   23     | LOP_PLUSPLUS expr
   24     | expr LOP_PLUSPLUS
   25     | LOP_SUBSUB expr
   26     | expr LOP_SUBSUB
   27     | LOP_NOT expr
   28     | LOP_LAB expr
   29     | LOP_PLUS expr
   30     | LOP_SUB expr
   31     | expr LOP_MULT expr
   32     | expr LOP_DIV expr
   33     | expr LOP_MOD expr
   34     | expr LOP_PLUS expr
   35     | expr LOP_SUB expr
   36     | expr LOP_G expr
   37     | expr LOP_L expr
   38     | expr LOP_GEQ expr
   39     | expr LOP_LEQ expr
   40     | expr LOP_EQ expr
   41     | expr LOP_NEQ expr
   42     | expr LOP_PLUSEQ expr
   43     | expr LOP_SUBEQ expr
   44     | expr LOP_MULTEQ expr
   45     | expr LOP_DIVEQ expr
   46     | expr LOP_MODEQ expr
   47     | expr LOP_AND expr
   48     | expr LOP_OR expr
   49     | expr LOP_ASSIGN expr

   50 VALUE: IDENTIFIER
   51      | INTEGER
   52      | CHAR
   53      | STRING

   54 T: T_INT
   55  | T_CHAR
   56  | T_BOOL
   57  | T_VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
LP (258) 9 10 11 12 13 15
RP (259) 9 10 11 12 13 15
LBCT (260)
RBCT (261)
LB (262) 11 12 13 15
RB (263) 11 12 13 15
IF (264) 11
WHILE (265) 12
FOR (266) 13
RETURN (267) 5 6
PRINTF (268) 9
SCANF (269) 10
T_CHAR (270) 55
T_INT (271) 54
T_STRING (272)
T_BOOL (273) 56
T_VOID (274) 57
SEMICOLON (275) 4 5 6 8 9 10 13 14
COMMA (276) 17 21
IDENTIFIER (277) 15 18 19 50
INTEGER (278) 51
CHAR (279) 52
BOOL (280)
STRING (281) 53
LOP_ASSIGN (282) 19 49
LOP_OR (283) 48
LOP_AND (284) 47
LOP_EQ (285) 40
LOP_NEQ (286) 41
LOP_PLUSEQ (287) 42
LOP_SUBEQ (288) 43
LOP_MULTEQ (289) 44
LOP_DIVEQ (290) 45
LOP_MODEQ (291) 46
LOP_G (292) 36
LOP_L (293) 37
LOP_GEQ (294) 38
LOP_LEQ (295) 39
LOP_PLUS (296) 29 34
LOP_SUB (297) 30 35
LOP_MULT (298) 31
LOP_DIV (299) 32
LOP_MOD (300) 33
LOP_NOT (301) 27
LOP_LAB (302) 28
LOP_PLUSPLUS (303) 23 24
LOP_SUBSUB (304) 25 26


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1, on right: 0
statements (52)
    on left: 2 3, on right: 1 3 11 12 13 15
statement (53)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 3 13
declaration (54)
    on left: 14 15, on right: 7
decl_exprs (55)
    on left: 16 17, on right: 14 17
decl_expr (56)
    on left: 18 19, on right: 16 17
exprs (57)
    on left: 20 21, on right: 9 10 21
expr (58)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39
    40 41 42 43 44 45 46 47 48 49, on right: 5 8 11 12 13 19 20 21
    23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
    44 45 46 47 48 49
VALUE (59)
    on left: 50 51 52 53, on right: 22
T (60)
    on left: 54 55 56 57, on right: 14 15


State 0

    0 $accept: . program $end

    IF            shift, and go to state 1
    WHILE         shift, and go to state 2
    FOR           shift, and go to state 3
    RETURN        shift, and go to state 4
    PRINTF        shift, and go to state 5
    SCANF         shift, and go to state 6
    T_CHAR        shift, and go to state 7
    T_INT         shift, and go to state 8
    T_BOOL        shift, and go to state 9
    T_VOID        shift, and go to state 10
    SEMICOLON     shift, and go to state 11
    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    program      go to state 22
    statements   go to state 23
    statement    go to state 24
    declaration  go to state 25
    expr         go to state 26
    VALUE        go to state 27
    T            go to state 28


State 1

   11 statement: IF . LP expr RP LB statements RB

    LP  shift, and go to state 29


State 2

   12 statement: WHILE . LP expr RP LB statements RB

    LP  shift, and go to state 30


State 3

   13 statement: FOR . LP statement expr SEMICOLON expr RP LB statements RB

    LP  shift, and go to state 31


State 4

    5 statement: RETURN . expr SEMICOLON
    6          | RETURN . SEMICOLON

    SEMICOLON     shift, and go to state 32
    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 33
    VALUE  go to state 27


State 5

    9 statement: PRINTF . LP exprs RP SEMICOLON

    LP  shift, and go to state 34


State 6

   10 statement: SCANF . LP exprs RP SEMICOLON

    LP  shift, and go to state 35


State 7

   55 T: T_CHAR .

    $default  reduce using rule 55 (T)


State 8

   54 T: T_INT .

    $default  reduce using rule 54 (T)


State 9

   56 T: T_BOOL .

    $default  reduce using rule 56 (T)


State 10

   57 T: T_VOID .

    $default  reduce using rule 57 (T)


State 11

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 12

   50 VALUE: IDENTIFIER .

    $default  reduce using rule 50 (VALUE)


State 13

   51 VALUE: INTEGER .

    $default  reduce using rule 51 (VALUE)


State 14

   52 VALUE: CHAR .

    $default  reduce using rule 52 (VALUE)


State 15

   53 VALUE: STRING .

    $default  reduce using rule 53 (VALUE)


State 16

   29 expr: LOP_PLUS . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 36
    VALUE  go to state 27


State 17

   30 expr: LOP_SUB . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 37
    VALUE  go to state 27


State 18

   27 expr: LOP_NOT . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 38
    VALUE  go to state 27


State 19

   28 expr: LOP_LAB . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 39
    VALUE  go to state 27


State 20

   23 expr: LOP_PLUSPLUS . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 40
    VALUE  go to state 27


State 21

   25 expr: LOP_SUBSUB . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 41
    VALUE  go to state 27


State 22

    0 $accept: program . $end

    $end  shift, and go to state 42


State 23

    1 program: statements .
    3 statements: statements . statement

    IF            shift, and go to state 1
    WHILE         shift, and go to state 2
    FOR           shift, and go to state 3
    RETURN        shift, and go to state 4
    PRINTF        shift, and go to state 5
    SCANF         shift, and go to state 6
    T_CHAR        shift, and go to state 7
    T_INT         shift, and go to state 8
    T_BOOL        shift, and go to state 9
    T_VOID        shift, and go to state 10
    SEMICOLON     shift, and go to state 11
    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    $default  reduce using rule 1 (program)

    statement    go to state 43
    declaration  go to state 25
    expr         go to state 26
    VALUE        go to state 27
    T            go to state 28


State 24

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 25

    7 statement: declaration .

    $default  reduce using rule 7 (statement)


State 26

    8 statement: expr . SEMICOLON
   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    SEMICOLON     shift, and go to state 44
    LOP_ASSIGN    shift, and go to state 45
    LOP_OR        shift, and go to state 46
    LOP_AND       shift, and go to state 47
    LOP_EQ        shift, and go to state 48
    LOP_NEQ       shift, and go to state 49
    LOP_PLUSEQ    shift, and go to state 50
    LOP_SUBEQ     shift, and go to state 51
    LOP_MULTEQ    shift, and go to state 52
    LOP_DIVEQ     shift, and go to state 53
    LOP_MODEQ     shift, and go to state 54
    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65


State 27

   22 expr: VALUE .

    $default  reduce using rule 22 (expr)


State 28

   14 declaration: T . decl_exprs SEMICOLON
   15            | T . IDENTIFIER LP RP LB statements RB

    IDENTIFIER  shift, and go to state 66

    decl_exprs  go to state 67
    decl_expr   go to state 68


State 29

   11 statement: IF LP . expr RP LB statements RB

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 69
    VALUE  go to state 27


State 30

   12 statement: WHILE LP . expr RP LB statements RB

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 70
    VALUE  go to state 27


State 31

   13 statement: FOR LP . statement expr SEMICOLON expr RP LB statements RB

    IF            shift, and go to state 1
    WHILE         shift, and go to state 2
    FOR           shift, and go to state 3
    RETURN        shift, and go to state 4
    PRINTF        shift, and go to state 5
    SCANF         shift, and go to state 6
    T_CHAR        shift, and go to state 7
    T_INT         shift, and go to state 8
    T_BOOL        shift, and go to state 9
    T_VOID        shift, and go to state 10
    SEMICOLON     shift, and go to state 11
    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    statement    go to state 71
    declaration  go to state 25
    expr         go to state 26
    VALUE        go to state 27
    T            go to state 28


State 32

    6 statement: RETURN SEMICOLON .

    $default  reduce using rule 6 (statement)


State 33

    5 statement: RETURN expr . SEMICOLON
   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    SEMICOLON     shift, and go to state 72
    LOP_ASSIGN    shift, and go to state 45
    LOP_OR        shift, and go to state 46
    LOP_AND       shift, and go to state 47
    LOP_EQ        shift, and go to state 48
    LOP_NEQ       shift, and go to state 49
    LOP_PLUSEQ    shift, and go to state 50
    LOP_SUBEQ     shift, and go to state 51
    LOP_MULTEQ    shift, and go to state 52
    LOP_DIVEQ     shift, and go to state 53
    LOP_MODEQ     shift, and go to state 54
    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65


State 34

    9 statement: PRINTF LP . exprs RP SEMICOLON

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    exprs  go to state 73
    expr   go to state 74
    VALUE  go to state 27


State 35

   10 statement: SCANF LP . exprs RP SEMICOLON

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    exprs  go to state 75
    expr   go to state 74
    VALUE  go to state 27


State 36

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   29     | LOP_PLUS expr .
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 29 (expr)


State 37

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   30     | LOP_SUB expr .
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 30 (expr)


State 38

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   27     | LOP_NOT expr .
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 27 (expr)


State 39

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   28     | LOP_LAB expr .
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 28 (expr)


State 40

   23 expr: LOP_PLUSPLUS expr .
   24     | expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    $default  reduce using rule 23 (expr)


State 41

   24 expr: expr . LOP_PLUSPLUS
   25     | LOP_SUBSUB expr .
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    $default  reduce using rule 25 (expr)


State 42

    0 $accept: program $end .

    $default  accept


State 43

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 44

    8 statement: expr SEMICOLON .

    $default  reduce using rule 8 (statement)


State 45

   49 expr: expr LOP_ASSIGN . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 76
    VALUE  go to state 27


State 46

   48 expr: expr LOP_OR . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 77
    VALUE  go to state 27


State 47

   47 expr: expr LOP_AND . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 78
    VALUE  go to state 27


State 48

   40 expr: expr LOP_EQ . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 79
    VALUE  go to state 27


State 49

   41 expr: expr LOP_NEQ . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 80
    VALUE  go to state 27


State 50

   42 expr: expr LOP_PLUSEQ . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 81
    VALUE  go to state 27


State 51

   43 expr: expr LOP_SUBEQ . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 82
    VALUE  go to state 27


State 52

   44 expr: expr LOP_MULTEQ . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 83
    VALUE  go to state 27


State 53

   45 expr: expr LOP_DIVEQ . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 84
    VALUE  go to state 27


State 54

   46 expr: expr LOP_MODEQ . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 85
    VALUE  go to state 27


State 55

   36 expr: expr LOP_G . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 86
    VALUE  go to state 27


State 56

   37 expr: expr LOP_L . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 87
    VALUE  go to state 27


State 57

   38 expr: expr LOP_GEQ . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 88
    VALUE  go to state 27


State 58

   39 expr: expr LOP_LEQ . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 89
    VALUE  go to state 27


State 59

   34 expr: expr LOP_PLUS . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 90
    VALUE  go to state 27


State 60

   35 expr: expr LOP_SUB . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 91
    VALUE  go to state 27


State 61

   31 expr: expr LOP_MULT . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 92
    VALUE  go to state 27


State 62

   32 expr: expr LOP_DIV . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 93
    VALUE  go to state 27


State 63

   33 expr: expr LOP_MOD . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 94
    VALUE  go to state 27


State 64

   24 expr: expr LOP_PLUSPLUS .

    $default  reduce using rule 24 (expr)


State 65

   26 expr: expr LOP_SUBSUB .

    $default  reduce using rule 26 (expr)


State 66

   15 declaration: T IDENTIFIER . LP RP LB statements RB
   18 decl_expr: IDENTIFIER .
   19          | IDENTIFIER . LOP_ASSIGN expr

    LP          shift, and go to state 95
    LOP_ASSIGN  shift, and go to state 96

    $default  reduce using rule 18 (decl_expr)


State 67

   14 declaration: T decl_exprs . SEMICOLON
   17 decl_exprs: decl_exprs . COMMA decl_expr

    SEMICOLON  shift, and go to state 97
    COMMA      shift, and go to state 98


State 68

   16 decl_exprs: decl_expr .

    $default  reduce using rule 16 (decl_exprs)


State 69

   11 statement: IF LP expr . RP LB statements RB
   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    RP            shift, and go to state 99
    LOP_ASSIGN    shift, and go to state 45
    LOP_OR        shift, and go to state 46
    LOP_AND       shift, and go to state 47
    LOP_EQ        shift, and go to state 48
    LOP_NEQ       shift, and go to state 49
    LOP_PLUSEQ    shift, and go to state 50
    LOP_SUBEQ     shift, and go to state 51
    LOP_MULTEQ    shift, and go to state 52
    LOP_DIVEQ     shift, and go to state 53
    LOP_MODEQ     shift, and go to state 54
    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65


State 70

   12 statement: WHILE LP expr . RP LB statements RB
   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    RP            shift, and go to state 100
    LOP_ASSIGN    shift, and go to state 45
    LOP_OR        shift, and go to state 46
    LOP_AND       shift, and go to state 47
    LOP_EQ        shift, and go to state 48
    LOP_NEQ       shift, and go to state 49
    LOP_PLUSEQ    shift, and go to state 50
    LOP_SUBEQ     shift, and go to state 51
    LOP_MULTEQ    shift, and go to state 52
    LOP_DIVEQ     shift, and go to state 53
    LOP_MODEQ     shift, and go to state 54
    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65


State 71

   13 statement: FOR LP statement . expr SEMICOLON expr RP LB statements RB

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 101
    VALUE  go to state 27


State 72

    5 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 5 (statement)


State 73

    9 statement: PRINTF LP exprs . RP SEMICOLON
   21 exprs: exprs . COMMA expr

    RP     shift, and go to state 102
    COMMA  shift, and go to state 103


State 74

   20 exprs: expr .
   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_ASSIGN    shift, and go to state 45
    LOP_OR        shift, and go to state 46
    LOP_AND       shift, and go to state 47
    LOP_EQ        shift, and go to state 48
    LOP_NEQ       shift, and go to state 49
    LOP_PLUSEQ    shift, and go to state 50
    LOP_SUBEQ     shift, and go to state 51
    LOP_MULTEQ    shift, and go to state 52
    LOP_DIVEQ     shift, and go to state 53
    LOP_MODEQ     shift, and go to state 54
    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 20 (exprs)


State 75

   10 statement: SCANF LP exprs . RP SEMICOLON
   21 exprs: exprs . COMMA expr

    RP     shift, and go to state 104
    COMMA  shift, and go to state 103


State 76

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr
   49     | expr LOP_ASSIGN expr .

    LOP_OR        shift, and go to state 46
    LOP_AND       shift, and go to state 47
    LOP_EQ        shift, and go to state 48
    LOP_NEQ       shift, and go to state 49
    LOP_PLUSEQ    shift, and go to state 50
    LOP_SUBEQ     shift, and go to state 51
    LOP_MULTEQ    shift, and go to state 52
    LOP_DIVEQ     shift, and go to state 53
    LOP_MODEQ     shift, and go to state 54
    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 49 (expr)


State 77

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   48     | expr LOP_OR expr .
   49     | expr . LOP_ASSIGN expr

    LOP_AND       shift, and go to state 47
    LOP_EQ        shift, and go to state 48
    LOP_NEQ       shift, and go to state 49
    LOP_PLUSEQ    shift, and go to state 50
    LOP_SUBEQ     shift, and go to state 51
    LOP_MULTEQ    shift, and go to state 52
    LOP_DIVEQ     shift, and go to state 53
    LOP_MODEQ     shift, and go to state 54
    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 48 (expr)


State 78

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   47     | expr LOP_AND expr .
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_EQ        shift, and go to state 48
    LOP_NEQ       shift, and go to state 49
    LOP_PLUSEQ    shift, and go to state 50
    LOP_SUBEQ     shift, and go to state 51
    LOP_MULTEQ    shift, and go to state 52
    LOP_DIVEQ     shift, and go to state 53
    LOP_MODEQ     shift, and go to state 54
    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 47 (expr)


State 79

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   40     | expr LOP_EQ expr .
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 40 (expr)


State 80

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   41     | expr LOP_NEQ expr .
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 41 (expr)


State 81

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   42     | expr LOP_PLUSEQ expr .
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 42 (expr)


State 82

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   43     | expr LOP_SUBEQ expr .
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 43 (expr)


State 83

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   44     | expr LOP_MULTEQ expr .
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 44 (expr)


State 84

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   45     | expr LOP_DIVEQ expr .
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 45 (expr)


State 85

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   46     | expr LOP_MODEQ expr .
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 46 (expr)


State 86

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   36     | expr LOP_G expr .
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 36 (expr)


State 87

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   37     | expr LOP_L expr .
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 37 (expr)


State 88

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   38     | expr LOP_GEQ expr .
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 38 (expr)


State 89

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   39     | expr LOP_LEQ expr .
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 39 (expr)


State 90

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   34     | expr LOP_PLUS expr .
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 34 (expr)


State 91

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   35     | expr LOP_SUB expr .
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 35 (expr)


State 92

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   31     | expr LOP_MULT expr .
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 31 (expr)


State 93

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   32     | expr LOP_DIV expr .
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 32 (expr)


State 94

   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   33     | expr LOP_MOD expr .
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 33 (expr)


State 95

   15 declaration: T IDENTIFIER LP . RP LB statements RB

    RP  shift, and go to state 105


State 96

   19 decl_expr: IDENTIFIER LOP_ASSIGN . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 106
    VALUE  go to state 27


State 97

   14 declaration: T decl_exprs SEMICOLON .

    $default  reduce using rule 14 (declaration)


State 98

   17 decl_exprs: decl_exprs COMMA . decl_expr

    IDENTIFIER  shift, and go to state 107

    decl_expr  go to state 108


State 99

   11 statement: IF LP expr RP . LB statements RB

    LB  shift, and go to state 109


State 100

   12 statement: WHILE LP expr RP . LB statements RB

    LB  shift, and go to state 110


State 101

   13 statement: FOR LP statement expr . SEMICOLON expr RP LB statements RB
   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    SEMICOLON     shift, and go to state 111
    LOP_ASSIGN    shift, and go to state 45
    LOP_OR        shift, and go to state 46
    LOP_AND       shift, and go to state 47
    LOP_EQ        shift, and go to state 48
    LOP_NEQ       shift, and go to state 49
    LOP_PLUSEQ    shift, and go to state 50
    LOP_SUBEQ     shift, and go to state 51
    LOP_MULTEQ    shift, and go to state 52
    LOP_DIVEQ     shift, and go to state 53
    LOP_MODEQ     shift, and go to state 54
    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65


State 102

    9 statement: PRINTF LP exprs RP . SEMICOLON

    SEMICOLON  shift, and go to state 112


State 103

   21 exprs: exprs COMMA . expr

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 113
    VALUE  go to state 27


State 104

   10 statement: SCANF LP exprs RP . SEMICOLON

    SEMICOLON  shift, and go to state 114


State 105

   15 declaration: T IDENTIFIER LP RP . LB statements RB

    LB  shift, and go to state 115


State 106

   19 decl_expr: IDENTIFIER LOP_ASSIGN expr .
   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_ASSIGN    shift, and go to state 45
    LOP_OR        shift, and go to state 46
    LOP_AND       shift, and go to state 47
    LOP_EQ        shift, and go to state 48
    LOP_NEQ       shift, and go to state 49
    LOP_PLUSEQ    shift, and go to state 50
    LOP_SUBEQ     shift, and go to state 51
    LOP_MULTEQ    shift, and go to state 52
    LOP_DIVEQ     shift, and go to state 53
    LOP_MODEQ     shift, and go to state 54
    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 19 (decl_expr)


State 107

   18 decl_expr: IDENTIFIER .
   19          | IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 96

    $default  reduce using rule 18 (decl_expr)


State 108

   17 decl_exprs: decl_exprs COMMA decl_expr .

    $default  reduce using rule 17 (decl_exprs)


State 109

   11 statement: IF LP expr RP LB . statements RB

    IF            shift, and go to state 1
    WHILE         shift, and go to state 2
    FOR           shift, and go to state 3
    RETURN        shift, and go to state 4
    PRINTF        shift, and go to state 5
    SCANF         shift, and go to state 6
    T_CHAR        shift, and go to state 7
    T_INT         shift, and go to state 8
    T_BOOL        shift, and go to state 9
    T_VOID        shift, and go to state 10
    SEMICOLON     shift, and go to state 11
    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    statements   go to state 116
    statement    go to state 24
    declaration  go to state 25
    expr         go to state 26
    VALUE        go to state 27
    T            go to state 28


State 110

   12 statement: WHILE LP expr RP LB . statements RB

    IF            shift, and go to state 1
    WHILE         shift, and go to state 2
    FOR           shift, and go to state 3
    RETURN        shift, and go to state 4
    PRINTF        shift, and go to state 5
    SCANF         shift, and go to state 6
    T_CHAR        shift, and go to state 7
    T_INT         shift, and go to state 8
    T_BOOL        shift, and go to state 9
    T_VOID        shift, and go to state 10
    SEMICOLON     shift, and go to state 11
    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    statements   go to state 117
    statement    go to state 24
    declaration  go to state 25
    expr         go to state 26
    VALUE        go to state 27
    T            go to state 28


State 111

   13 statement: FOR LP statement expr SEMICOLON . expr RP LB statements RB

    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    expr   go to state 118
    VALUE  go to state 27


State 112

    9 statement: PRINTF LP exprs RP SEMICOLON .

    $default  reduce using rule 9 (statement)


State 113

   21 exprs: exprs COMMA expr .
   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    LOP_ASSIGN    shift, and go to state 45
    LOP_OR        shift, and go to state 46
    LOP_AND       shift, and go to state 47
    LOP_EQ        shift, and go to state 48
    LOP_NEQ       shift, and go to state 49
    LOP_PLUSEQ    shift, and go to state 50
    LOP_SUBEQ     shift, and go to state 51
    LOP_MULTEQ    shift, and go to state 52
    LOP_DIVEQ     shift, and go to state 53
    LOP_MODEQ     shift, and go to state 54
    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65

    $default  reduce using rule 21 (exprs)


State 114

   10 statement: SCANF LP exprs RP SEMICOLON .

    $default  reduce using rule 10 (statement)


State 115

   15 declaration: T IDENTIFIER LP RP LB . statements RB

    IF            shift, and go to state 1
    WHILE         shift, and go to state 2
    FOR           shift, and go to state 3
    RETURN        shift, and go to state 4
    PRINTF        shift, and go to state 5
    SCANF         shift, and go to state 6
    T_CHAR        shift, and go to state 7
    T_INT         shift, and go to state 8
    T_BOOL        shift, and go to state 9
    T_VOID        shift, and go to state 10
    SEMICOLON     shift, and go to state 11
    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    statements   go to state 119
    statement    go to state 24
    declaration  go to state 25
    expr         go to state 26
    VALUE        go to state 27
    T            go to state 28


State 116

    3 statements: statements . statement
   11 statement: IF LP expr RP LB statements . RB

    RB            shift, and go to state 120
    IF            shift, and go to state 1
    WHILE         shift, and go to state 2
    FOR           shift, and go to state 3
    RETURN        shift, and go to state 4
    PRINTF        shift, and go to state 5
    SCANF         shift, and go to state 6
    T_CHAR        shift, and go to state 7
    T_INT         shift, and go to state 8
    T_BOOL        shift, and go to state 9
    T_VOID        shift, and go to state 10
    SEMICOLON     shift, and go to state 11
    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    statement    go to state 43
    declaration  go to state 25
    expr         go to state 26
    VALUE        go to state 27
    T            go to state 28


State 117

    3 statements: statements . statement
   12 statement: WHILE LP expr RP LB statements . RB

    RB            shift, and go to state 121
    IF            shift, and go to state 1
    WHILE         shift, and go to state 2
    FOR           shift, and go to state 3
    RETURN        shift, and go to state 4
    PRINTF        shift, and go to state 5
    SCANF         shift, and go to state 6
    T_CHAR        shift, and go to state 7
    T_INT         shift, and go to state 8
    T_BOOL        shift, and go to state 9
    T_VOID        shift, and go to state 10
    SEMICOLON     shift, and go to state 11
    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    statement    go to state 43
    declaration  go to state 25
    expr         go to state 26
    VALUE        go to state 27
    T            go to state 28


State 118

   13 statement: FOR LP statement expr SEMICOLON expr . RP LB statements RB
   24 expr: expr . LOP_PLUSPLUS
   26     | expr . LOP_SUBSUB
   31     | expr . LOP_MULT expr
   32     | expr . LOP_DIV expr
   33     | expr . LOP_MOD expr
   34     | expr . LOP_PLUS expr
   35     | expr . LOP_SUB expr
   36     | expr . LOP_G expr
   37     | expr . LOP_L expr
   38     | expr . LOP_GEQ expr
   39     | expr . LOP_LEQ expr
   40     | expr . LOP_EQ expr
   41     | expr . LOP_NEQ expr
   42     | expr . LOP_PLUSEQ expr
   43     | expr . LOP_SUBEQ expr
   44     | expr . LOP_MULTEQ expr
   45     | expr . LOP_DIVEQ expr
   46     | expr . LOP_MODEQ expr
   47     | expr . LOP_AND expr
   48     | expr . LOP_OR expr
   49     | expr . LOP_ASSIGN expr

    RP            shift, and go to state 122
    LOP_ASSIGN    shift, and go to state 45
    LOP_OR        shift, and go to state 46
    LOP_AND       shift, and go to state 47
    LOP_EQ        shift, and go to state 48
    LOP_NEQ       shift, and go to state 49
    LOP_PLUSEQ    shift, and go to state 50
    LOP_SUBEQ     shift, and go to state 51
    LOP_MULTEQ    shift, and go to state 52
    LOP_DIVEQ     shift, and go to state 53
    LOP_MODEQ     shift, and go to state 54
    LOP_G         shift, and go to state 55
    LOP_L         shift, and go to state 56
    LOP_GEQ       shift, and go to state 57
    LOP_LEQ       shift, and go to state 58
    LOP_PLUS      shift, and go to state 59
    LOP_SUB       shift, and go to state 60
    LOP_MULT      shift, and go to state 61
    LOP_DIV       shift, and go to state 62
    LOP_MOD       shift, and go to state 63
    LOP_PLUSPLUS  shift, and go to state 64
    LOP_SUBSUB    shift, and go to state 65


State 119

    3 statements: statements . statement
   15 declaration: T IDENTIFIER LP RP LB statements . RB

    RB            shift, and go to state 123
    IF            shift, and go to state 1
    WHILE         shift, and go to state 2
    FOR           shift, and go to state 3
    RETURN        shift, and go to state 4
    PRINTF        shift, and go to state 5
    SCANF         shift, and go to state 6
    T_CHAR        shift, and go to state 7
    T_INT         shift, and go to state 8
    T_BOOL        shift, and go to state 9
    T_VOID        shift, and go to state 10
    SEMICOLON     shift, and go to state 11
    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    statement    go to state 43
    declaration  go to state 25
    expr         go to state 26
    VALUE        go to state 27
    T            go to state 28


State 120

   11 statement: IF LP expr RP LB statements RB .

    $default  reduce using rule 11 (statement)


State 121

   12 statement: WHILE LP expr RP LB statements RB .

    $default  reduce using rule 12 (statement)


State 122

   13 statement: FOR LP statement expr SEMICOLON expr RP . LB statements RB

    LB  shift, and go to state 124


State 123

   15 declaration: T IDENTIFIER LP RP LB statements RB .

    $default  reduce using rule 15 (declaration)


State 124

   13 statement: FOR LP statement expr SEMICOLON expr RP LB . statements RB

    IF            shift, and go to state 1
    WHILE         shift, and go to state 2
    FOR           shift, and go to state 3
    RETURN        shift, and go to state 4
    PRINTF        shift, and go to state 5
    SCANF         shift, and go to state 6
    T_CHAR        shift, and go to state 7
    T_INT         shift, and go to state 8
    T_BOOL        shift, and go to state 9
    T_VOID        shift, and go to state 10
    SEMICOLON     shift, and go to state 11
    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    statements   go to state 125
    statement    go to state 24
    declaration  go to state 25
    expr         go to state 26
    VALUE        go to state 27
    T            go to state 28


State 125

    3 statements: statements . statement
   13 statement: FOR LP statement expr SEMICOLON expr RP LB statements . RB

    RB            shift, and go to state 126
    IF            shift, and go to state 1
    WHILE         shift, and go to state 2
    FOR           shift, and go to state 3
    RETURN        shift, and go to state 4
    PRINTF        shift, and go to state 5
    SCANF         shift, and go to state 6
    T_CHAR        shift, and go to state 7
    T_INT         shift, and go to state 8
    T_BOOL        shift, and go to state 9
    T_VOID        shift, and go to state 10
    SEMICOLON     shift, and go to state 11
    IDENTIFIER    shift, and go to state 12
    INTEGER       shift, and go to state 13
    CHAR          shift, and go to state 14
    STRING        shift, and go to state 15
    LOP_PLUS      shift, and go to state 16
    LOP_SUB       shift, and go to state 17
    LOP_NOT       shift, and go to state 18
    LOP_LAB       shift, and go to state 19
    LOP_PLUSPLUS  shift, and go to state 20
    LOP_SUBSUB    shift, and go to state 21

    statement    go to state 43
    declaration  go to state 25
    expr         go to state 26
    VALUE        go to state 27
    T            go to state 28


State 126

   13 statement: FOR LP statement expr SEMICOLON expr RP LB statements RB .

    $default  reduce using rule 13 (statement)
