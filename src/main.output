Terminals unused in grammar

   LBCT
   RBCT
   T_STRING
   BOOL


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | RETURN expr SEMICOLON
    6          | RETURN SEMICOLON
    7          | declaration
    8          | expr SEMICOLON
    9          | PRINTF LP exprs RP SEMICOLON
   10          | SCANF LP exprs RP SEMICOLON
   11          | IF LP expr RP LB statements RB
   12          | WHILE LP expr RP LB statements RB
   13          | FOR LP statement expr SEMICOLON expr RP LB statements RB

   14 declaration: T decl_exprs SEMICOLON
   15            | T IDENTIFIER LP RP LB statements RB

   16 decl_exprs: decl_expr
   17           | decl_exprs COMMA decl_expr

   18 decl_expr: IDENTIFIER
   19          | IDENTIFIER LOP_ASSIGN expr

   20 exprs: expr
   21      | exprs COMMA expr

   22 expr: VALUE
   23     | LP expr RP
   24     | LOP_PLUSPLUS expr
   25     | expr LOP_PLUSPLUS
   26     | LOP_SUBSUB expr
   27     | expr LOP_SUBSUB
   28     | LOP_NOT expr
   29     | LOP_LAB expr
   30     | LOP_PLUS expr
   31     | LOP_SUB expr
   32     | expr LOP_MULT expr
   33     | expr LOP_DIV expr
   34     | expr LOP_MOD expr
   35     | expr LOP_PLUS expr
   36     | expr LOP_SUB expr
   37     | expr LOP_G expr
   38     | expr LOP_L expr
   39     | expr LOP_GEQ expr
   40     | expr LOP_LEQ expr
   41     | expr LOP_EQ expr
   42     | expr LOP_NEQ expr
   43     | expr LOP_PLUSEQ expr
   44     | expr LOP_SUBEQ expr
   45     | expr LOP_MULTEQ expr
   46     | expr LOP_DIVEQ expr
   47     | expr LOP_MODEQ expr
   48     | expr LOP_AND expr
   49     | expr LOP_OR expr
   50     | expr LOP_ASSIGN expr

   51 VALUE: IDENTIFIER
   52      | INTEGER
   53      | CHAR
   54      | STRING

   55 T: T_INT
   56  | T_CHAR
   57  | T_BOOL
   58  | T_VOID
   59  | T_CONST T_INT
   60  | T_CONST T_CHAR
   61  | T_CONST T_BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
LP (258) 9 10 11 12 13 15 23
RP (259) 9 10 11 12 13 15 23
LBCT (260)
RBCT (261)
LB (262) 11 12 13 15
RB (263) 11 12 13 15
IF (264) 11
WHILE (265) 12
FOR (266) 13
RETURN (267) 5 6
PRINTF (268) 9
SCANF (269) 10
T_CHAR (270) 56 60
T_INT (271) 55 59
T_STRING (272)
T_BOOL (273) 57 61
T_VOID (274) 58
T_CONST (275) 59 60 61
SEMICOLON (276) 4 5 6 8 9 10 13 14
COMMA (277) 17 21
IDENTIFIER (278) 15 18 19 51
INTEGER (279) 52
CHAR (280) 53
BOOL (281)
STRING (282) 54
LOP_ASSIGN (283) 19 50
LOP_OR (284) 49
LOP_AND (285) 48
LOP_EQ (286) 41
LOP_NEQ (287) 42
LOP_PLUSEQ (288) 43
LOP_SUBEQ (289) 44
LOP_MULTEQ (290) 45
LOP_DIVEQ (291) 46
LOP_MODEQ (292) 47
LOP_G (293) 37
LOP_L (294) 38
LOP_GEQ (295) 39
LOP_LEQ (296) 40
LOP_PLUS (297) 30 35
LOP_SUB (298) 31 36
LOP_MULT (299) 32
LOP_DIV (300) 33
LOP_MOD (301) 34
LOP_NOT (302) 28
LOP_LAB (303) 29
LOP_PLUSPLUS (304) 24 25
LOP_SUBSUB (305) 26 27


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
statements (53)
    on left: 2 3, on right: 1 3 11 12 13 15
statement (54)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 3 13
declaration (55)
    on left: 14 15, on right: 7
decl_exprs (56)
    on left: 16 17, on right: 14 17
decl_expr (57)
    on left: 18 19, on right: 16 17
exprs (58)
    on left: 20 21, on right: 9 10 21
expr (59)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39
    40 41 42 43 44 45 46 47 48 49 50, on right: 5 8 11 12 13 19 20
    21 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
    43 44 45 46 47 48 49 50
VALUE (60)
    on left: 51 52 53 54, on right: 22
T (61)
    on left: 55 56 57 58 59 60 61, on right: 14 15


State 0

    0 $accept: . program $end

    LP            shift, and go to state 1
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    RETURN        shift, and go to state 5
    PRINTF        shift, and go to state 6
    SCANF         shift, and go to state 7
    T_CHAR        shift, and go to state 8
    T_INT         shift, and go to state 9
    T_BOOL        shift, and go to state 10
    T_VOID        shift, and go to state 11
    T_CONST       shift, and go to state 12
    SEMICOLON     shift, and go to state 13
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    program      go to state 24
    statements   go to state 25
    statement    go to state 26
    declaration  go to state 27
    expr         go to state 28
    VALUE        go to state 29
    T            go to state 30


State 1

   23 expr: LP . expr RP

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 31
    VALUE  go to state 29


State 2

   11 statement: IF . LP expr RP LB statements RB

    LP  shift, and go to state 32


State 3

   12 statement: WHILE . LP expr RP LB statements RB

    LP  shift, and go to state 33


State 4

   13 statement: FOR . LP statement expr SEMICOLON expr RP LB statements RB

    LP  shift, and go to state 34


State 5

    5 statement: RETURN . expr SEMICOLON
    6          | RETURN . SEMICOLON

    LP            shift, and go to state 1
    SEMICOLON     shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 36
    VALUE  go to state 29


State 6

    9 statement: PRINTF . LP exprs RP SEMICOLON

    LP  shift, and go to state 37


State 7

   10 statement: SCANF . LP exprs RP SEMICOLON

    LP  shift, and go to state 38


State 8

   56 T: T_CHAR .

    $default  reduce using rule 56 (T)


State 9

   55 T: T_INT .

    $default  reduce using rule 55 (T)


State 10

   57 T: T_BOOL .

    $default  reduce using rule 57 (T)


State 11

   58 T: T_VOID .

    $default  reduce using rule 58 (T)


State 12

   59 T: T_CONST . T_INT
   60  | T_CONST . T_CHAR
   61  | T_CONST . T_BOOL

    T_CHAR  shift, and go to state 39
    T_INT   shift, and go to state 40
    T_BOOL  shift, and go to state 41


State 13

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 14

   51 VALUE: IDENTIFIER .

    $default  reduce using rule 51 (VALUE)


State 15

   52 VALUE: INTEGER .

    $default  reduce using rule 52 (VALUE)


State 16

   53 VALUE: CHAR .

    $default  reduce using rule 53 (VALUE)


State 17

   54 VALUE: STRING .

    $default  reduce using rule 54 (VALUE)


State 18

   30 expr: LOP_PLUS . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 42
    VALUE  go to state 29


State 19

   31 expr: LOP_SUB . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 43
    VALUE  go to state 29


State 20

   28 expr: LOP_NOT . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 44
    VALUE  go to state 29


State 21

   29 expr: LOP_LAB . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 45
    VALUE  go to state 29


State 22

   24 expr: LOP_PLUSPLUS . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 46
    VALUE  go to state 29


State 23

   26 expr: LOP_SUBSUB . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 47
    VALUE  go to state 29


State 24

    0 $accept: program . $end

    $end  shift, and go to state 48


State 25

    1 program: statements .
    3 statements: statements . statement

    LP            shift, and go to state 1
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    RETURN        shift, and go to state 5
    PRINTF        shift, and go to state 6
    SCANF         shift, and go to state 7
    T_CHAR        shift, and go to state 8
    T_INT         shift, and go to state 9
    T_BOOL        shift, and go to state 10
    T_VOID        shift, and go to state 11
    T_CONST       shift, and go to state 12
    SEMICOLON     shift, and go to state 13
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    $default  reduce using rule 1 (program)

    statement    go to state 49
    declaration  go to state 27
    expr         go to state 28
    VALUE        go to state 29
    T            go to state 30


State 26

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 27

    7 statement: declaration .

    $default  reduce using rule 7 (statement)


State 28

    8 statement: expr . SEMICOLON
   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    SEMICOLON     shift, and go to state 50
    LOP_ASSIGN    shift, and go to state 51
    LOP_OR        shift, and go to state 52
    LOP_AND       shift, and go to state 53
    LOP_EQ        shift, and go to state 54
    LOP_NEQ       shift, and go to state 55
    LOP_PLUSEQ    shift, and go to state 56
    LOP_SUBEQ     shift, and go to state 57
    LOP_MULTEQ    shift, and go to state 58
    LOP_DIVEQ     shift, and go to state 59
    LOP_MODEQ     shift, and go to state 60
    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71


State 29

   22 expr: VALUE .

    $default  reduce using rule 22 (expr)


State 30

   14 declaration: T . decl_exprs SEMICOLON
   15            | T . IDENTIFIER LP RP LB statements RB

    IDENTIFIER  shift, and go to state 72

    decl_exprs  go to state 73
    decl_expr   go to state 74


State 31

   23 expr: LP expr . RP
   25     | expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    RP            shift, and go to state 75
    LOP_ASSIGN    shift, and go to state 51
    LOP_OR        shift, and go to state 52
    LOP_AND       shift, and go to state 53
    LOP_EQ        shift, and go to state 54
    LOP_NEQ       shift, and go to state 55
    LOP_PLUSEQ    shift, and go to state 56
    LOP_SUBEQ     shift, and go to state 57
    LOP_MULTEQ    shift, and go to state 58
    LOP_DIVEQ     shift, and go to state 59
    LOP_MODEQ     shift, and go to state 60
    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71


State 32

   11 statement: IF LP . expr RP LB statements RB

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 76
    VALUE  go to state 29


State 33

   12 statement: WHILE LP . expr RP LB statements RB

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 77
    VALUE  go to state 29


State 34

   13 statement: FOR LP . statement expr SEMICOLON expr RP LB statements RB

    LP            shift, and go to state 1
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    RETURN        shift, and go to state 5
    PRINTF        shift, and go to state 6
    SCANF         shift, and go to state 7
    T_CHAR        shift, and go to state 8
    T_INT         shift, and go to state 9
    T_BOOL        shift, and go to state 10
    T_VOID        shift, and go to state 11
    T_CONST       shift, and go to state 12
    SEMICOLON     shift, and go to state 13
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    statement    go to state 78
    declaration  go to state 27
    expr         go to state 28
    VALUE        go to state 29
    T            go to state 30


State 35

    6 statement: RETURN SEMICOLON .

    $default  reduce using rule 6 (statement)


State 36

    5 statement: RETURN expr . SEMICOLON
   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    SEMICOLON     shift, and go to state 79
    LOP_ASSIGN    shift, and go to state 51
    LOP_OR        shift, and go to state 52
    LOP_AND       shift, and go to state 53
    LOP_EQ        shift, and go to state 54
    LOP_NEQ       shift, and go to state 55
    LOP_PLUSEQ    shift, and go to state 56
    LOP_SUBEQ     shift, and go to state 57
    LOP_MULTEQ    shift, and go to state 58
    LOP_DIVEQ     shift, and go to state 59
    LOP_MODEQ     shift, and go to state 60
    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71


State 37

    9 statement: PRINTF LP . exprs RP SEMICOLON

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    exprs  go to state 80
    expr   go to state 81
    VALUE  go to state 29


State 38

   10 statement: SCANF LP . exprs RP SEMICOLON

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    exprs  go to state 82
    expr   go to state 81
    VALUE  go to state 29


State 39

   60 T: T_CONST T_CHAR .

    $default  reduce using rule 60 (T)


State 40

   59 T: T_CONST T_INT .

    $default  reduce using rule 59 (T)


State 41

   61 T: T_CONST T_BOOL .

    $default  reduce using rule 61 (T)


State 42

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   30     | LOP_PLUS expr .
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 30 (expr)


State 43

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   31     | LOP_SUB expr .
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 31 (expr)


State 44

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   28     | LOP_NOT expr .
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 28 (expr)


State 45

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   29     | LOP_LAB expr .
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 29 (expr)


State 46

   24 expr: LOP_PLUSPLUS expr .
   25     | expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    $default  reduce using rule 24 (expr)


State 47

   25 expr: expr . LOP_PLUSPLUS
   26     | LOP_SUBSUB expr .
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    $default  reduce using rule 26 (expr)


State 48

    0 $accept: program $end .

    $default  accept


State 49

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 50

    8 statement: expr SEMICOLON .

    $default  reduce using rule 8 (statement)


State 51

   50 expr: expr LOP_ASSIGN . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 83
    VALUE  go to state 29


State 52

   49 expr: expr LOP_OR . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 84
    VALUE  go to state 29


State 53

   48 expr: expr LOP_AND . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 85
    VALUE  go to state 29


State 54

   41 expr: expr LOP_EQ . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 86
    VALUE  go to state 29


State 55

   42 expr: expr LOP_NEQ . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 87
    VALUE  go to state 29


State 56

   43 expr: expr LOP_PLUSEQ . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 88
    VALUE  go to state 29


State 57

   44 expr: expr LOP_SUBEQ . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 89
    VALUE  go to state 29


State 58

   45 expr: expr LOP_MULTEQ . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 90
    VALUE  go to state 29


State 59

   46 expr: expr LOP_DIVEQ . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 91
    VALUE  go to state 29


State 60

   47 expr: expr LOP_MODEQ . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 92
    VALUE  go to state 29


State 61

   37 expr: expr LOP_G . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 93
    VALUE  go to state 29


State 62

   38 expr: expr LOP_L . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 94
    VALUE  go to state 29


State 63

   39 expr: expr LOP_GEQ . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 95
    VALUE  go to state 29


State 64

   40 expr: expr LOP_LEQ . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 96
    VALUE  go to state 29


State 65

   35 expr: expr LOP_PLUS . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 97
    VALUE  go to state 29


State 66

   36 expr: expr LOP_SUB . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 98
    VALUE  go to state 29


State 67

   32 expr: expr LOP_MULT . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 99
    VALUE  go to state 29


State 68

   33 expr: expr LOP_DIV . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 100
    VALUE  go to state 29


State 69

   34 expr: expr LOP_MOD . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 101
    VALUE  go to state 29


State 70

   25 expr: expr LOP_PLUSPLUS .

    $default  reduce using rule 25 (expr)


State 71

   27 expr: expr LOP_SUBSUB .

    $default  reduce using rule 27 (expr)


State 72

   15 declaration: T IDENTIFIER . LP RP LB statements RB
   18 decl_expr: IDENTIFIER .
   19          | IDENTIFIER . LOP_ASSIGN expr

    LP          shift, and go to state 102
    LOP_ASSIGN  shift, and go to state 103

    $default  reduce using rule 18 (decl_expr)


State 73

   14 declaration: T decl_exprs . SEMICOLON
   17 decl_exprs: decl_exprs . COMMA decl_expr

    SEMICOLON  shift, and go to state 104
    COMMA      shift, and go to state 105


State 74

   16 decl_exprs: decl_expr .

    $default  reduce using rule 16 (decl_exprs)


State 75

   23 expr: LP expr RP .

    $default  reduce using rule 23 (expr)


State 76

   11 statement: IF LP expr . RP LB statements RB
   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    RP            shift, and go to state 106
    LOP_ASSIGN    shift, and go to state 51
    LOP_OR        shift, and go to state 52
    LOP_AND       shift, and go to state 53
    LOP_EQ        shift, and go to state 54
    LOP_NEQ       shift, and go to state 55
    LOP_PLUSEQ    shift, and go to state 56
    LOP_SUBEQ     shift, and go to state 57
    LOP_MULTEQ    shift, and go to state 58
    LOP_DIVEQ     shift, and go to state 59
    LOP_MODEQ     shift, and go to state 60
    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71


State 77

   12 statement: WHILE LP expr . RP LB statements RB
   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    RP            shift, and go to state 107
    LOP_ASSIGN    shift, and go to state 51
    LOP_OR        shift, and go to state 52
    LOP_AND       shift, and go to state 53
    LOP_EQ        shift, and go to state 54
    LOP_NEQ       shift, and go to state 55
    LOP_PLUSEQ    shift, and go to state 56
    LOP_SUBEQ     shift, and go to state 57
    LOP_MULTEQ    shift, and go to state 58
    LOP_DIVEQ     shift, and go to state 59
    LOP_MODEQ     shift, and go to state 60
    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71


State 78

   13 statement: FOR LP statement . expr SEMICOLON expr RP LB statements RB

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 108
    VALUE  go to state 29


State 79

    5 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 5 (statement)


State 80

    9 statement: PRINTF LP exprs . RP SEMICOLON
   21 exprs: exprs . COMMA expr

    RP     shift, and go to state 109
    COMMA  shift, and go to state 110


State 81

   20 exprs: expr .
   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_ASSIGN    shift, and go to state 51
    LOP_OR        shift, and go to state 52
    LOP_AND       shift, and go to state 53
    LOP_EQ        shift, and go to state 54
    LOP_NEQ       shift, and go to state 55
    LOP_PLUSEQ    shift, and go to state 56
    LOP_SUBEQ     shift, and go to state 57
    LOP_MULTEQ    shift, and go to state 58
    LOP_DIVEQ     shift, and go to state 59
    LOP_MODEQ     shift, and go to state 60
    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 20 (exprs)


State 82

   10 statement: SCANF LP exprs . RP SEMICOLON
   21 exprs: exprs . COMMA expr

    RP     shift, and go to state 111
    COMMA  shift, and go to state 110


State 83

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr
   50     | expr LOP_ASSIGN expr .

    LOP_OR        shift, and go to state 52
    LOP_AND       shift, and go to state 53
    LOP_EQ        shift, and go to state 54
    LOP_NEQ       shift, and go to state 55
    LOP_PLUSEQ    shift, and go to state 56
    LOP_SUBEQ     shift, and go to state 57
    LOP_MULTEQ    shift, and go to state 58
    LOP_DIVEQ     shift, and go to state 59
    LOP_MODEQ     shift, and go to state 60
    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 50 (expr)


State 84

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   49     | expr LOP_OR expr .
   50     | expr . LOP_ASSIGN expr

    LOP_AND       shift, and go to state 53
    LOP_EQ        shift, and go to state 54
    LOP_NEQ       shift, and go to state 55
    LOP_PLUSEQ    shift, and go to state 56
    LOP_SUBEQ     shift, and go to state 57
    LOP_MULTEQ    shift, and go to state 58
    LOP_DIVEQ     shift, and go to state 59
    LOP_MODEQ     shift, and go to state 60
    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 49 (expr)


State 85

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   48     | expr LOP_AND expr .
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_EQ        shift, and go to state 54
    LOP_NEQ       shift, and go to state 55
    LOP_PLUSEQ    shift, and go to state 56
    LOP_SUBEQ     shift, and go to state 57
    LOP_MULTEQ    shift, and go to state 58
    LOP_DIVEQ     shift, and go to state 59
    LOP_MODEQ     shift, and go to state 60
    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 48 (expr)


State 86

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   41     | expr LOP_EQ expr .
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 41 (expr)


State 87

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   42     | expr LOP_NEQ expr .
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 42 (expr)


State 88

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   43     | expr LOP_PLUSEQ expr .
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 43 (expr)


State 89

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   44     | expr LOP_SUBEQ expr .
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 44 (expr)


State 90

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   45     | expr LOP_MULTEQ expr .
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 45 (expr)


State 91

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   46     | expr LOP_DIVEQ expr .
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 46 (expr)


State 92

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   47     | expr LOP_MODEQ expr .
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 47 (expr)


State 93

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   37     | expr LOP_G expr .
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 37 (expr)


State 94

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   38     | expr LOP_L expr .
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 38 (expr)


State 95

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   39     | expr LOP_GEQ expr .
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 39 (expr)


State 96

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   40     | expr LOP_LEQ expr .
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 40 (expr)


State 97

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   35     | expr LOP_PLUS expr .
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 35 (expr)


State 98

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   36     | expr LOP_SUB expr .
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 36 (expr)


State 99

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   32     | expr LOP_MULT expr .
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 32 (expr)


State 100

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   33     | expr LOP_DIV expr .
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 33 (expr)


State 101

   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   34     | expr LOP_MOD expr .
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 34 (expr)


State 102

   15 declaration: T IDENTIFIER LP . RP LB statements RB

    RP  shift, and go to state 112


State 103

   19 decl_expr: IDENTIFIER LOP_ASSIGN . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 113
    VALUE  go to state 29


State 104

   14 declaration: T decl_exprs SEMICOLON .

    $default  reduce using rule 14 (declaration)


State 105

   17 decl_exprs: decl_exprs COMMA . decl_expr

    IDENTIFIER  shift, and go to state 114

    decl_expr  go to state 115


State 106

   11 statement: IF LP expr RP . LB statements RB

    LB  shift, and go to state 116


State 107

   12 statement: WHILE LP expr RP . LB statements RB

    LB  shift, and go to state 117


State 108

   13 statement: FOR LP statement expr . SEMICOLON expr RP LB statements RB
   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    SEMICOLON     shift, and go to state 118
    LOP_ASSIGN    shift, and go to state 51
    LOP_OR        shift, and go to state 52
    LOP_AND       shift, and go to state 53
    LOP_EQ        shift, and go to state 54
    LOP_NEQ       shift, and go to state 55
    LOP_PLUSEQ    shift, and go to state 56
    LOP_SUBEQ     shift, and go to state 57
    LOP_MULTEQ    shift, and go to state 58
    LOP_DIVEQ     shift, and go to state 59
    LOP_MODEQ     shift, and go to state 60
    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71


State 109

    9 statement: PRINTF LP exprs RP . SEMICOLON

    SEMICOLON  shift, and go to state 119


State 110

   21 exprs: exprs COMMA . expr

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 120
    VALUE  go to state 29


State 111

   10 statement: SCANF LP exprs RP . SEMICOLON

    SEMICOLON  shift, and go to state 121


State 112

   15 declaration: T IDENTIFIER LP RP . LB statements RB

    LB  shift, and go to state 122


State 113

   19 decl_expr: IDENTIFIER LOP_ASSIGN expr .
   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_ASSIGN    shift, and go to state 51
    LOP_OR        shift, and go to state 52
    LOP_AND       shift, and go to state 53
    LOP_EQ        shift, and go to state 54
    LOP_NEQ       shift, and go to state 55
    LOP_PLUSEQ    shift, and go to state 56
    LOP_SUBEQ     shift, and go to state 57
    LOP_MULTEQ    shift, and go to state 58
    LOP_DIVEQ     shift, and go to state 59
    LOP_MODEQ     shift, and go to state 60
    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 19 (decl_expr)


State 114

   18 decl_expr: IDENTIFIER .
   19          | IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 103

    $default  reduce using rule 18 (decl_expr)


State 115

   17 decl_exprs: decl_exprs COMMA decl_expr .

    $default  reduce using rule 17 (decl_exprs)


State 116

   11 statement: IF LP expr RP LB . statements RB

    LP            shift, and go to state 1
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    RETURN        shift, and go to state 5
    PRINTF        shift, and go to state 6
    SCANF         shift, and go to state 7
    T_CHAR        shift, and go to state 8
    T_INT         shift, and go to state 9
    T_BOOL        shift, and go to state 10
    T_VOID        shift, and go to state 11
    T_CONST       shift, and go to state 12
    SEMICOLON     shift, and go to state 13
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    statements   go to state 123
    statement    go to state 26
    declaration  go to state 27
    expr         go to state 28
    VALUE        go to state 29
    T            go to state 30


State 117

   12 statement: WHILE LP expr RP LB . statements RB

    LP            shift, and go to state 1
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    RETURN        shift, and go to state 5
    PRINTF        shift, and go to state 6
    SCANF         shift, and go to state 7
    T_CHAR        shift, and go to state 8
    T_INT         shift, and go to state 9
    T_BOOL        shift, and go to state 10
    T_VOID        shift, and go to state 11
    T_CONST       shift, and go to state 12
    SEMICOLON     shift, and go to state 13
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    statements   go to state 124
    statement    go to state 26
    declaration  go to state 27
    expr         go to state 28
    VALUE        go to state 29
    T            go to state 30


State 118

   13 statement: FOR LP statement expr SEMICOLON . expr RP LB statements RB

    LP            shift, and go to state 1
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    expr   go to state 125
    VALUE  go to state 29


State 119

    9 statement: PRINTF LP exprs RP SEMICOLON .

    $default  reduce using rule 9 (statement)


State 120

   21 exprs: exprs COMMA expr .
   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    LOP_ASSIGN    shift, and go to state 51
    LOP_OR        shift, and go to state 52
    LOP_AND       shift, and go to state 53
    LOP_EQ        shift, and go to state 54
    LOP_NEQ       shift, and go to state 55
    LOP_PLUSEQ    shift, and go to state 56
    LOP_SUBEQ     shift, and go to state 57
    LOP_MULTEQ    shift, and go to state 58
    LOP_DIVEQ     shift, and go to state 59
    LOP_MODEQ     shift, and go to state 60
    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71

    $default  reduce using rule 21 (exprs)


State 121

   10 statement: SCANF LP exprs RP SEMICOLON .

    $default  reduce using rule 10 (statement)


State 122

   15 declaration: T IDENTIFIER LP RP LB . statements RB

    LP            shift, and go to state 1
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    RETURN        shift, and go to state 5
    PRINTF        shift, and go to state 6
    SCANF         shift, and go to state 7
    T_CHAR        shift, and go to state 8
    T_INT         shift, and go to state 9
    T_BOOL        shift, and go to state 10
    T_VOID        shift, and go to state 11
    T_CONST       shift, and go to state 12
    SEMICOLON     shift, and go to state 13
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    statements   go to state 126
    statement    go to state 26
    declaration  go to state 27
    expr         go to state 28
    VALUE        go to state 29
    T            go to state 30


State 123

    3 statements: statements . statement
   11 statement: IF LP expr RP LB statements . RB

    LP            shift, and go to state 1
    RB            shift, and go to state 127
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    RETURN        shift, and go to state 5
    PRINTF        shift, and go to state 6
    SCANF         shift, and go to state 7
    T_CHAR        shift, and go to state 8
    T_INT         shift, and go to state 9
    T_BOOL        shift, and go to state 10
    T_VOID        shift, and go to state 11
    T_CONST       shift, and go to state 12
    SEMICOLON     shift, and go to state 13
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    statement    go to state 49
    declaration  go to state 27
    expr         go to state 28
    VALUE        go to state 29
    T            go to state 30


State 124

    3 statements: statements . statement
   12 statement: WHILE LP expr RP LB statements . RB

    LP            shift, and go to state 1
    RB            shift, and go to state 128
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    RETURN        shift, and go to state 5
    PRINTF        shift, and go to state 6
    SCANF         shift, and go to state 7
    T_CHAR        shift, and go to state 8
    T_INT         shift, and go to state 9
    T_BOOL        shift, and go to state 10
    T_VOID        shift, and go to state 11
    T_CONST       shift, and go to state 12
    SEMICOLON     shift, and go to state 13
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    statement    go to state 49
    declaration  go to state 27
    expr         go to state 28
    VALUE        go to state 29
    T            go to state 30


State 125

   13 statement: FOR LP statement expr SEMICOLON expr . RP LB statements RB
   25 expr: expr . LOP_PLUSPLUS
   27     | expr . LOP_SUBSUB
   32     | expr . LOP_MULT expr
   33     | expr . LOP_DIV expr
   34     | expr . LOP_MOD expr
   35     | expr . LOP_PLUS expr
   36     | expr . LOP_SUB expr
   37     | expr . LOP_G expr
   38     | expr . LOP_L expr
   39     | expr . LOP_GEQ expr
   40     | expr . LOP_LEQ expr
   41     | expr . LOP_EQ expr
   42     | expr . LOP_NEQ expr
   43     | expr . LOP_PLUSEQ expr
   44     | expr . LOP_SUBEQ expr
   45     | expr . LOP_MULTEQ expr
   46     | expr . LOP_DIVEQ expr
   47     | expr . LOP_MODEQ expr
   48     | expr . LOP_AND expr
   49     | expr . LOP_OR expr
   50     | expr . LOP_ASSIGN expr

    RP            shift, and go to state 129
    LOP_ASSIGN    shift, and go to state 51
    LOP_OR        shift, and go to state 52
    LOP_AND       shift, and go to state 53
    LOP_EQ        shift, and go to state 54
    LOP_NEQ       shift, and go to state 55
    LOP_PLUSEQ    shift, and go to state 56
    LOP_SUBEQ     shift, and go to state 57
    LOP_MULTEQ    shift, and go to state 58
    LOP_DIVEQ     shift, and go to state 59
    LOP_MODEQ     shift, and go to state 60
    LOP_G         shift, and go to state 61
    LOP_L         shift, and go to state 62
    LOP_GEQ       shift, and go to state 63
    LOP_LEQ       shift, and go to state 64
    LOP_PLUS      shift, and go to state 65
    LOP_SUB       shift, and go to state 66
    LOP_MULT      shift, and go to state 67
    LOP_DIV       shift, and go to state 68
    LOP_MOD       shift, and go to state 69
    LOP_PLUSPLUS  shift, and go to state 70
    LOP_SUBSUB    shift, and go to state 71


State 126

    3 statements: statements . statement
   15 declaration: T IDENTIFIER LP RP LB statements . RB

    LP            shift, and go to state 1
    RB            shift, and go to state 130
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    RETURN        shift, and go to state 5
    PRINTF        shift, and go to state 6
    SCANF         shift, and go to state 7
    T_CHAR        shift, and go to state 8
    T_INT         shift, and go to state 9
    T_BOOL        shift, and go to state 10
    T_VOID        shift, and go to state 11
    T_CONST       shift, and go to state 12
    SEMICOLON     shift, and go to state 13
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    statement    go to state 49
    declaration  go to state 27
    expr         go to state 28
    VALUE        go to state 29
    T            go to state 30


State 127

   11 statement: IF LP expr RP LB statements RB .

    $default  reduce using rule 11 (statement)


State 128

   12 statement: WHILE LP expr RP LB statements RB .

    $default  reduce using rule 12 (statement)


State 129

   13 statement: FOR LP statement expr SEMICOLON expr RP . LB statements RB

    LB  shift, and go to state 131


State 130

   15 declaration: T IDENTIFIER LP RP LB statements RB .

    $default  reduce using rule 15 (declaration)


State 131

   13 statement: FOR LP statement expr SEMICOLON expr RP LB . statements RB

    LP            shift, and go to state 1
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    RETURN        shift, and go to state 5
    PRINTF        shift, and go to state 6
    SCANF         shift, and go to state 7
    T_CHAR        shift, and go to state 8
    T_INT         shift, and go to state 9
    T_BOOL        shift, and go to state 10
    T_VOID        shift, and go to state 11
    T_CONST       shift, and go to state 12
    SEMICOLON     shift, and go to state 13
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    statements   go to state 132
    statement    go to state 26
    declaration  go to state 27
    expr         go to state 28
    VALUE        go to state 29
    T            go to state 30


State 132

    3 statements: statements . statement
   13 statement: FOR LP statement expr SEMICOLON expr RP LB statements . RB

    LP            shift, and go to state 1
    RB            shift, and go to state 133
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    RETURN        shift, and go to state 5
    PRINTF        shift, and go to state 6
    SCANF         shift, and go to state 7
    T_CHAR        shift, and go to state 8
    T_INT         shift, and go to state 9
    T_BOOL        shift, and go to state 10
    T_VOID        shift, and go to state 11
    T_CONST       shift, and go to state 12
    SEMICOLON     shift, and go to state 13
    IDENTIFIER    shift, and go to state 14
    INTEGER       shift, and go to state 15
    CHAR          shift, and go to state 16
    STRING        shift, and go to state 17
    LOP_PLUS      shift, and go to state 18
    LOP_SUB       shift, and go to state 19
    LOP_NOT       shift, and go to state 20
    LOP_LAB       shift, and go to state 21
    LOP_PLUSPLUS  shift, and go to state 22
    LOP_SUBSUB    shift, and go to state 23

    statement    go to state 49
    declaration  go to state 27
    expr         go to state 28
    VALUE        go to state 29
    T            go to state 30


State 133

   13 statement: FOR LP statement expr SEMICOLON expr RP LB statements RB .

    $default  reduce using rule 13 (statement)
